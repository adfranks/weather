{"version":3,"sources":["components/title.component.jsx","components/form.component.jsx","components/weather.component.jsx","components/forecast.component.jsx","App.js","serviceWorker.js","index.js"],"names":["Title","className","Form","props","error","onSubmit","huntgather","type","name","autoComplete","placeholder","Weather","city","nameday","time","weathericon","description","tempF","tempC","clouds","wind","humidity","sunrise","sunset","Forecast","metropolis","Accordion","dates","map","dateitem","ind","key","toString","Card","Header","Toggle","as","variant","eventKey","Collapse","Body","hour","item","index","day","includes","conditions","tempFah","tempCel","vapor","gust","moistness","api_key","App","getData","e","a","async","preventDefault","target","elements","value","country","url","url2","fetch","api_request","json","response","api_request2","response2","undefined","sys","setState","formatDate","dt","timezone","theDay","icon","getIcon","weather","id","fahrenheit","calFahrenheit","main","temp","celsius","calCelsius","all","direction","deg","calMph","speed","timeofday","fTemp","cTemp","role","list","i","length","state","getMeridiem","getDates","weatherIcon","thunderstorm","drizzle","hail","rain","sleet","snow","smoke","dust","fog","squall","tornado","atmosphere","clear","partCloud","wIcon","this","compass","Math","round","mps","toFixed","alphaMonth","d","Date","year","getUTCFullYear","dayofmonth","getUTCDate","readMonth","getUTCMonth","alphaDay","getUTCDay","toUTCString","slice","theHour","startsWith","uniqueDays","filter","el","nation","React","Component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.eada86e7.chunk.js","sourcesContent":["import React from 'react';\n\nconst Title = () => {\n  return (\n    <header className=\"p-2\">\n      <h1>The Weather</h1>\n    </header>\n  );\n};\n\nexport default Title;\n","import React from 'react';\n\nconst Form = (props) => {\n  return (\n    <div className=\"container-fluid\">\n      <div>{props.error || null}</div>\n      <form onSubmit={props.huntgather}>\n        <div className=\"row\">\n          <div className=\"col-md-4\">\n            <input \n              type=\"text\" \n              className=\"form-control mb-2\" \n              name=\"city\"\n              autoComplete=\"off\" \n              placeholder=\"Enter city\" \n            />\n          </div>\n          <div className=\"col-md-4\">\n            <input \n              type=\"text\" \n              className=\"form-control mb-2\" \n              name=\"country\"\n              autoComplete=\"off\" \n              placeholder=\"Enter country\" \n            />\n          </div>\n          <div className=\"col-md-4\">\n            <button className=\"mb-3 btn btn-warning\">Get Weather</button>\n          </div>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default Form;\n","import React from 'react';\n\nconst Weather = (props) => {\n  return (\n    <div className=\"current-wrap\">\n      <h2 className=\"font-weight-bold\">{props.city}</h2>\n      <p>{props.nameday}, {props.time}</p>\n      <p>\n        <i className={`wi ${props.weathericon} focus-data px-3`} />\n        <span className=\n          \"px-3 text-capitalize desc text-nowrap\">\n          {props.description}\n        </span>\n      </p>\n      <p className=\"mb-1 focus-data\">\n        {props.tempF ? \n          (<span className=\"px-3\">{props.tempF}&deg;F</span>) : null}\n        {props.tempC | (props.tempC === 0) ? (<span className=\n          \"px-3 text-nowrap\">{props.tempC}&deg;C</span>) : null}\n      </p>\n      <p className=\"my-1\">Clouds: {props.clouds}%</p>\n      <p className=\"my-1\">Wind: {props.wind}</p>\n      <p className=\"my-1\">Humidity: {props.humidity}%</p>\n      <p className=\"my-1\">Sunrise: {props.sunrise}</p>\n      <p className=\"my-1\">Sunset: {props.sunset}</p>\n    </div>\n  );\n};\n\nexport default Weather;\n","import React from 'react';\r\nimport {Accordion, Card} from 'react-bootstrap';\r\n\r\nconst Forecast = (props) => {\r\n  return (\r\n    <div className=\"forecast-wrap\">\r\n      <h3>\r\n        5 Day / 3 Hour Forecast\r\n        <small> - {props.metropolis}</small>\r\n      </h3>\r\n      <Accordion>\r\n        {props.dates.map((dateitem, ind) => ( \r\n          <div \r\n            key={ind.toString()} \r\n          >\r\n            <Card className=\"mb-1 forecast-content rounded\">\r\n              <Card.Header>\r\n                <Accordion.Toggle \r\n                  className=\"p-0 text-white\" \r\n                  as={Card.Header} \r\n                  variant=\"link\" \r\n                  eventKey={ind}\r\n                >\r\n                  <h4>{dateitem}</h4> \r\n                </Accordion.Toggle>\r\n              </Card.Header>\r\n              <Accordion.Collapse eventKey={ind}>\r\n                <Card.Body className=\"cbody\">\r\n                  {props.hour.map((item, index) => ( \r\n                    props.day[index].includes(dateitem) &&\r\n                    <div \r\n                      key={index.toString()} \r\n                      className=\"time-block text-left mb-1 font-weight-bold\"\r\n                    >\r\n                      <p key={item + 1}>\r\n                        Time: {item}\r\n                      </p>\r\n                      <p key={item + 2}>\r\n                        Description: {props.conditions[index]}\r\n                      </p>\r\n                      <p key={item + 3}>\r\n                        Temperature: {props.tempFah[index]}&deg;F,\r\n                        <span> </span>{props.tempCel[index]}&deg;C\r\n                      </p>\r\n                      <p key={item + 4}>\r\n                        Clouds: {props.vapor[index]}%\r\n                      </p>\r\n                      <p key={item + 5}>\r\n                        Wind: {props.gust[index]}\r\n                      </p>\r\n                      <p key={item + 6}>\r\n                        Humidity: {props.moistness[index]}%\r\n                      </p>\r\n                    </div>\r\n                  ))}\r\n                </Card.Body>\r\n              </Accordion.Collapse>\r\n            </Card>\r\n          </div>\r\n        ))}\r\n      </Accordion>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Forecast;\r\n","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'weather-icons/css/weather-icons.css';\nimport './App.css';\nimport Title from './components/title.component';\nimport Form from './components/form.component';\nimport Weather from './components/weather.component';\nimport Forecast from './components/forecast.component';\n\nconst api_key = \"ee7805b1493ea1513ea5afe3b5440a16\";\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      city: undefined,\n      time: undefined,\n      nameday: undefined,\n      icon: undefined,\n      fahrenheit: undefined,\n      celsius: undefined,\n      description: \"\",\n      clouds: undefined,\n      wind: undefined,\n      humidity: undefined,\n      sunrise: undefined,\n      sunset: undefined,\n      error: false,\n      metropolis: undefined,\n      day: [],\n      hour: [],\n      conditions: [],\n      fTemp: [],\n      cTemp: [],\n      vapor: [],\n      gust: [],\n      moistness: [],\n      dates: []\n    };\n\n    this.weatherIcon = {\n      thunderstorm: \"wi-thunderstorm\",\n      drizzle: \"wi-sprinkle\",\n      hail: \"wi-hail\",\n      rain: \"wi-rain\",\n      sleet: \"wi-sleet\",\n      snow: \"wi-snow\",\n      smoke: \"wi-smoke\",\n      dust: \"wi-dust\",\n      fog: \"wi-fog\",\n      squall: \"wi-strong-wind\",\n      tornado: \"wi-tornado\",\n      atmosphere: \"wi-fog\",\n      clear: \"wi-day-sunny\",\n      partCloud: \"wi-night-partly-cloudy\",\n      clouds: \"wi-cloudy\"\n    };\n  }\n\n  getIcon(id) {\n    let wIcon;\n\n    switch(true) {\n      case id >= 200 && id <= 232:\n        wIcon = this.weatherIcon.thunderstorm;\n        break;\n      case (id >= 300 && id <= 321) || (id === 701):\n        wIcon = this.weatherIcon.drizzle;\n        break;\n      case id === 511:\n        wIcon = this.weatherIcon.hail;\n        break;\n      case id >= 500 && id <= 531:\n        wIcon = this.weatherIcon.rain;\n        break;\n      case id >= 611 && id <= 613:\n        wIcon = this.weatherIcon.sleet;\n        break;\n      case id >= 600 && id <= 622:\n        wIcon = this.weatherIcon.snow;\n        break;\n      case id === 711:\n        wIcon = this.weatherIcon.smoke;\n        break;\n      case id === 731 || id === 751 || id === 761 || id === 762:\n        wIcon = this.weatherIcon.dust;\n        break;\n      case id === 741:\n        wIcon = this.weatherIcon.fog;\n        break;\n      case id === 771:\n        wIcon = this.weatherIcon.squall;\n        break;\n      case id === 781:\n        wIcon = this.weatherIcon.tornado;\n        break;\n      case id >= 701 && id <= 781:\n        wIcon = this.weatherIcon.atmosphere;\n        break;\n      case id === 800:\n        wIcon = this.weatherIcon.clear;\n        break;\n      case id === 801 || id === 802:\n        wIcon = this.weatherIcon.partCloud;\n        break;\n      case id === 803 || id === 804:\n        wIcon = this.weatherIcon.clouds;\n        break;\n      default:\n        wIcon = null;\n    }\n\n    return wIcon;\n  }\n\n  direction(deg) {\n    let compass = \"\";\n\n    switch(true) {\n      case deg >= 337.5 || deg < 22.5:\n        compass = \"N\"; \n        break;\n      case deg >= 22.5 && deg < 67.5:\n        compass = \"NE\"; \n        break;\n      case deg >= 67.5 && deg < 112.5:\n        compass = \"E\"; \n        break;\n      case deg >= 112.5 && deg < 157.5:\n        compass = \"SE\"; \n        break;\n      case deg >= 157.5 && deg < 202.5:\n        compass = \"S\"; \n        break;\n      case deg >= 202.5 && deg < 247.5:\n        compass = \"SW\"; \n        break;\n      case deg >= 247.5 && deg < 292.5:\n        compass = \"W\"; \n        break;\n      case deg >= 292.5 && deg < 337.5:\n        compass = \"N\"; \n        break;\n      default:\n        compass = \"\";\n    }\n\n    return compass;\n  }\n\n  calFahrenheit(temp) {\n    let fah = Math.round((9/5) * (temp - 273.15) + 32);\n    return fah;\n  }\n\n  calCelsius(temp) {\n    let cel = Math.round(temp - 273.15);\n    return cel;\n  }\n  \n  calMph(mps) {\n    let num = mps * 2.23694;\n    let mph = num.toFixed(1);\n    return mph;\n  }\n\n  formatDate(time) {\n    let d = new Date(time);\n    let year = d.getUTCFullYear().toString();\n    let dayofmonth = d.getUTCDate().toString();\n    let month = d.getUTCMonth();\n    let readMonth = month + 1;\n    let alphaMonth;\n    let readDate;\n\n    switch(readMonth) {\n      case 1:\n        alphaMonth = \"January\";\n        break;\n      case 2:\n        alphaMonth = \"February\";\n        break;\n      case 3:\n        alphaMonth = \"March\";\n        break;\n      case 4:\n        alphaMonth = \"April\";\n        break;\n      case 5:\n        alphaMonth = \"May\";\n        break;\n      case 6:\n        alphaMonth = \"June\";\n        break;\n      case 7:\n        alphaMonth = \"July\";\n        break;\n      case 8:\n        alphaMonth = \"August\";\n        break;\n      case 9:\n        alphaMonth = \"September\";\n        break;\n      case 10:\n        alphaMonth = \"October\";\n        break;\n      case 11:\n        alphaMonth = \"November\";\n        break;\n      case 12:\n        alphaMonth = \"December\";\n        break;\n      default:\n        alphaMonth = readMonth.toString();  \n    }\n\n    readDate = alphaMonth + \" \" + dayofmonth + \", \" + year; \n\n    return readDate;\n  }\n\n  theDay(time) {\n    let d = new Date(time);\n    let dayofweek = d.getUTCDay();\n    let alphaDay;\n\n    switch(dayofweek) {\n      case 0:\n        alphaDay= \"Sunday\";\n        break;\n      case 1:\n        alphaDay= \"Monday\";\n        break;\n      case 2:\n        alphaDay= \"Tuesday\";\n        break;\n      case 3:\n        alphaDay= \"Wednesday\";\n        break;\n      case 4:\n        alphaDay= \"Thursday\";\n        break;\n      case 5:\n        alphaDay= \"Friday\";\n        break;\n      case 6:\n        alphaDay= \"Saturday\";\n        break;\n      default:\n        alphaDay= null;\n    }\n  \n    return alphaDay;\n  }\n\n  timeofday(time) {\n    let d = new Date(time);\n    let forecastTime = d.toUTCString();\n    let readHours = forecastTime.slice(-12, -7); \n\n    return readHours;\n  }\n\n  getMeridiem(hour) {\n    let time = this.timeofday(hour);\n    let theHour = time;\n\n    switch(true) {\n      case time === \"00:00\":\n        theHour = \"12am\";\n        break;\n      case time.startsWith(\"0\"):\n        theHour = time.slice(1, 2) + \"am\";\n        break;\n      case (time.startsWith(\"1\") && (time.slice(0, 2) < \"12\")): \n        theHour = time.slice(0, 2) + \"am\";\n        break;\n      case time === \"12:00\":\n        theHour = \"12pm\";\n        break;\n      case (time.startsWith(\"1\") || time.startsWith(\"2\")): \n        theHour = (time.slice(0, 2) - \"12\") + \"pm\";\n        break;\n      default:\n        theHour = time;\n    }\n\n    return theHour;\n  }\n\n  getDates() {\n    const uniqueDays = this.state.day.filter((el, index) => {\n      return el !== this.state.day[index - 1];\n    });\n\n    this.setState({ \n      dates: uniqueDays\n    });\n  }\n\n  getData = async (e) => {\n    e.preventDefault();\n\n    const city = e.target.elements.city.value;\n    const country = e.target.elements.country.value;\n\n    if (city && country) {\n      let url = `https://api.openweathermap.org/data/2.5/weather?q=${city},${country}&appid=${api_key}`;\n      let url2 = `https://api.openweathermap.org/data/2.5/forecast?q=${city},${country}&appid=${api_key}`;\n      const api_request = await fetch(url);\n      const response = await api_request.json();\n      const api_request2 = await fetch(url2);\n      const response2 = await api_request2.json();\n\n      if (response.sys !== undefined) {\n        this.setState({\n          city: `${response.name}, ${response.sys.country}`,\n          time: this.formatDate((response.dt + response.timezone) * 1000),\n          nameday: this.theDay((response.dt + response.timezone) * 1000),\n          icon: this.getIcon(response.weather[0].id),\n          fahrenheit: this.calFahrenheit(response.main.temp),\n          celsius: this.calCelsius(response.main.temp),\n          description: response.weather[0].description,\n          clouds: response.clouds.all,\n          wind: `${this.direction(response.wind.deg)} at ${this.calMph(response.wind.speed)} mph`,\n          humidity: response.main.humidity,\n          sunrise: this.timeofday((response.sys.sunrise + response.timezone)\n            * 1000),\n          sunset: this.timeofday((response.sys.sunset + response.timezone) \n            * 1000),\n          error: false,\n          metropolis: [],\n          day: [],\n          hour: [], \n          fTemp: [],\n          cTemp: [],\n          conditions: [],\n          vapor: [],\n          gust: [],\n          moistness: []\n        });\n      } else {\n        this.setState({\n          error:\n          <div className=\"alert alert-danger mx-5 my-4 p-3\" role=\"alert\">\n            <p>City or country not found.  Make sure you have the city\n            and country spelling or ISO 3166 country code correct. \n            Otherwise, enter another city or country.</p>\n          </div>\n        });\n      }\n      \n      if (response2.list !== undefined) {\n        for (let i = 0; i < response2.list.length; i++) {\n          this.setState({\n            metropolis: `${response2.city.name}, ${response2.city.country}`,\n            day: [...this.state.day, \n              this.formatDate((response2.list[i].dt +\n              response2.city.timezone) * 1000)],\n            hour: [...this.state.hour, \n              this.getMeridiem((response2.list[i].dt +\n              response2.city.timezone) * 1000)],\n            fTemp: [...this.state.fTemp, \n              this.calFahrenheit(response2.list[i].main.temp)],\n            cTemp: [...this.state.cTemp, \n              this.calCelsius(response2.list[i].main.temp)],\n            conditions: [...this.state.conditions, \n              response2.list[i].weather[0].description],\n            vapor: [...this.state.vapor, response2.list[i].clouds.all],\n            gust: [...this.state.gust, \n              `${this.direction(response2.list[i].wind.deg)} at ${this.calMph(response2.list[i].wind.speed)} mph`],\n            moistness: [...this.state.moistness, \n              response2.list[i].main.humidity],\n          });\n        }\n      }\n\n      this.getDates();\n    } else {\n      this.setState({\n        error:\n        <div className=\"alert alert-danger mx-5 my-4 p-3\" role=\"alert\">\n          <p>Please, enter a city and country.</p>\n        </div>\n      });\n    }\n  };\n\n  render() {\n    if (this.state.city === undefined) {\n      return (\n        <div className=\"text-center\">\n          <Title />\n          <Form \n            huntgather={this.getData} \n            error={this.state.error} \n          />\n        </div>\n      );\n    } else {\n      return (\n        <div className=\"text-center\">\n          <Title />\n          <Form huntgather={this.getData} error={this.state.error} />\n          <div className=\"container-fluid\">\n            <div className=\"row\">\n              <div className=\"col-lg\">\n                <Weather\n                  city={this.state.city} \n                  country={this.state.country} \n                  time={this.state.time}\n                  nameday={this.state.nameday}\n                  weathericon={this.state.icon}\n                  tempF={this.state.fahrenheit}\n                  tempC={this.state.celsius}\n                  description={this.state.description}\n                  clouds={this.state.clouds}\n                  wind={this.state.wind}\n                  humidity={this.state.humidity}\n                  sunrise={this.state.sunrise}\n                  sunset={this.state.sunset}\n                />\n              </div>\n              <div className=\"col-lg\">\n                <Forecast \n                  metropolis={this.state.metropolis}\n                  nation={this.state.nation}\n                  dates={this.state.dates}\n                  day={this.state.day}\n                  hour={this.state.hour}\n                  tempFah={this.state.fTemp}\n                  tempCel={this.state.cTemp}\n                  conditions={this.state.conditions}\n                  vapor={this.state.vapor}\n                  gust={this.state.gust}\n                  moistness={this.state.moistness}\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n      );\n    }\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import 'react-app-polyfill/ie11';\nimport 'react-app-polyfill/stable';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}